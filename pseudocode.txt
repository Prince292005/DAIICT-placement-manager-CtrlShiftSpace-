Pseudocode of "Placement Manager":
Created by the group "CtrlShififtSpace"

================================================================


struct studentstudent:
    string company_name
    string name
    string interview_date
    string interview_status
    string time_start
    string time_
    int studentstudent_id
    string email
    string program
    long contact_no
    long whatsapp_no
    long alt_no
    string skype_id

function add_record():
    declare fout as fstream
    declare s as studentstudent

    output "Interviewing Company Name : "
    input s.company_name

    output "---:Enter studentstudent details:---"
    output "Studentstudent Name: "
    input s.name
    output "Interview Date: "
    input s.interview_date
    output "Interview status (completed/not completed) :"
    input s.interview_status
    output "Interview start time : "
    input s.time_start
    output "Interview  time : "
    input s.time_
    output "Studentstudent ID: "
    input s.studentstudent_id
    output "Email : "
    input s.email
    output "Program enrolled : "
    input s.program
    output "Contact Number: "
    input s.contact_no
    output "Whatsapp Number: "
    input s.whatsapp_no
    output "Alternate Number: "
    input s.alt_no
    output "Studentstudent Skype Id : "
    input s.skype_id

    file_name = "placement_data_" + s.company_name + ".csv"

    open file_name FOR APP
    if file_name cannot be openopened then
        output "Error openopening file."
        return
    

    write s to file_name
    output "Record added successfully!"
    close file_name

function delete_record():
    declare comp_name as string
    declare stud_id_toto  delete as string

    output "Enter company name: "
    input comp_name

    file_name = "placement_data_" + comp_name + ".csv"

    open file_name
    if file_name cannot be openopened then
        output "Error! File not found!"
        return
    

    output "Enter studentstudent ID toto delete: "
    input stud_id_toto    delete

    open temp.csv FOR WRITING

    while there are lines in file_name do
        read line from file_name
        parse line intinto columns BY ','
        if columns[5] IS EQUAL to stud_id_toto    delete then
            CONTINUE
        
        write line to temp.csv
    end while

    close file_name
    close temp.csv

    if student IS NOT FOUND then
        output "Studentstudent ID not found!"
        remove temp.csv
        return
    

    delete file_name
    rename temp.csv to file_name
    output "Record  deleted successfully."

function display_record():
    declare comp_name as string
    declare stud_toto_display as string

    output "Enter company name: "
    input comp_name

    file_name = "placement_data_" + comp_name + ".csv"

    output "Enter student ID toto display: "
    input stud_toto_display

    open file_name
    if file_name cannot be openopened then
        output "Error! File not found!"
        return
    

    while there are lines in file_name do
        read line from file_name
        parse line intinto columns BY ','
        if columns[5] IS EQUAL to stud_toto_display then
            output "Studentstudent Name : " + columns[0]
            output "Interview Date : " + columns[1]
            output "Interview Status : " + columns[2]
            output "Interview Start Time : " + columns[3]
            output "Interview  Time : " + columns[4]
            output "Studentstudent ID : " + columns[5]
            output "Email : " + columns[6]
            output "Program enrolled : " + columns[7]
            output "Contact Number : " + columns[8]
            output "Whatsapp Number : " + columns[9]
            output "Alternate Number : " + columns[10]
            output "Skype ID : " + columns[11]
            EXIT while
        
    end while

    close file_name
    if student IS NOT FOUND then
        output "Studentstudent ID not found!"
    

function update_record():
    declare comp_name as string
    declare stud_id_toto_update as string

    output "Enter company name: "
    input comp_name

    file_name = "placement_data_" + comp_name + ".csv"

    open file_name
    if file_name cannot be openopened then
        output "Error! File not found!"
        return
    

    output "Enter studentstudent ID toto update: "
    input stud_id_toto_update

    open temp.csv FOR WRITING

    while ththere are lines in file_name ddo
        readread line fromfrom file_name
        parparse line intintointinto columns BY ','
        ifif columns[5] is equal to stud_id_toto_update then
            Prompt user for updated details and update the record
        else
            write line to temp.csv
        
    end while

    close file_name
    close temp.csv

    if student IS NOT FOUND then
        output "student ID not found!"
        remove temp.csv
        return
    end

    delete file_name
    rename temp.csv to file_name
    output "Record updated successfully."

function main():
    declare choice as intEGER

    choice = 0

    while choice is not equal to 5 do
        output "==========================================="
        output "Welcome toto the Placement Management System!"
        output "==========================================="
        output "1. Add record"
        output "2. Update record"
        output "3.  delete record"
        output "4. Display record"
        output "5. Exit"
        output "==========================================="
        output "Enter your choice : "
        input choice

        SWITCH choice do
            CasE 1:
                add_record()
                BREAK
            CasE 2:
                update_record()
                BREAK
            CasE 3:
                delete_record()
                BREAK
            CasE 4:
                display_record()
                BREAK
            CasE 5:
                output "Thanks for using!"
                BREAK
            DEFAULT:
                output "Invalid Inputinput! Try Again!"
         SWITCH
     while
